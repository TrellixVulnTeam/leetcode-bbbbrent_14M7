# coding: utf-8
# Author：Brent
# Date ：2020/7/2 3:40 PM
# Tool ：PyCharm
# Describe ：假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。对每个孩子 i ，都有一个胃口值 gi ，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 j ，都有一个尺寸 sj 。如果 sj >= gi ，我们可以将这个饼干 j 分配给孩子 i ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。
#
# 注意：
#
# 你可以假设胃口值为正。
# 一个小朋友最多只能拥有一块饼干。
#
# 示例 1:
#
# 输入: [1,2,3], [1,1]
#
# 输出: 1
#
# 解释:
# 你有三个孩子和两块小饼干，3个孩子的胃口值分别是：1,2,3。
# 虽然你有两块小饼干，由于他们的尺寸都是1，你只能让胃口值是1的孩子满足。
# 所以你应该输出1。
# 示例 2:
#
# 输入: [1,2], [1,2,3]
#
# 输出: 2
#
# 解释:
# 你有两个孩子和三块小饼干，2个孩子的胃口值分别是1,2。
# 你拥有的饼干数量和尺寸都足以让所有孩子满足。
# 所以你应该输出2.
#
# 来源：力扣（LeetCode）
# 链接：https://leetcode-cn.com/problems/assign-cookies

"""
贪心思想1 优先满足需求因子较小的孩子。因为如果较小需求的孩子无法被满足，则之后的较大的需求更不可能能被满足了。
贪心思想2 尽量用较小的糖果去优先满足孩子。
"""
class Solution(object):
    def findContentChildren(self, g, s):
        """
        :type g: List[int]
        :type s: List[int]
        :rtype: int
        """
        # 边界判断
        if not g or not s: return 0
        # 排序，上面的两个思想
        g.sort()
        s.sort()
        #  初始化孩子和饼干的数量
        child, cookies = 0, 0
        while child < len(g) and cookies < len(s):
            # 如果当前孩子的饼干需求小于我们此次选择的，则满足条件
            if g[child] <= s[cookies]:
                child+=1
            # 无论是否满足，饼干数都要后移
            # 1.满足：则后移下一个饼干
            # 2.不满足：当前小的饼干不满足，则后移取更大一点的饼干与当前孩子的需求相比
            cookies+=1
        return child